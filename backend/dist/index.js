"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const helmet_1 = __importDefault(require("helmet"));
const compression_1 = __importDefault(require("compression"));
const morgan_1 = __importDefault(require("morgan"));
const dotenv_1 = __importDefault(require("dotenv"));
const database_1 = require("./config/database");
const api_1 = __importDefault(require("./routes/api"));
dotenv_1.default.config();
const app = (0, express_1.default)();
const port = process.env.PORT || 3001;
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ trust proxy –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Docker
app.set('trust proxy', 1);
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
app.use((0, helmet_1.default)({
    contentSecurityPolicy: {
        directives: {
            defaultSrc: ["'self'"],
            styleSrc: ["'self'", "'unsafe-inline'"],
            scriptSrc: ["'self'"],
            imgSrc: ["'self'", "data:", "https:"],
        },
    },
}));
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
const corsOptions = {
    origin: process.env.NODE_ENV === 'production'
        ? ['http://localhost:3000', 'http://localhost:3002']
        : '*',
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization'],
    credentials: true
};
app.use((0, cors_1.default)(corsOptions));
// –°–∂–∞—Ç–∏–µ –æ—Ç–≤–µ—Ç–æ–≤
app.use((0, compression_1.default)());
// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
app.use((0, morgan_1.default)('combined'));
// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
// const limiter = rateLimit({
//   windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
//   max: 100, // –º–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP
//   message: {
//     success: false,
//     message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –≤–∞—à–µ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
//   }
// });
// app.use('/api/', limiter);
// –ü–∞—Ä—Å–∏–Ω–≥ JSON
app.use(express_1.default.json({ limit: '10mb' }));
app.use(express_1.default.urlencoded({ extended: true, limit: '10mb' }));
// –ú–∞—Ä—à—Ä—É—Ç—ã API
app.use('/api', api_1.default);
// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404
app.use('*', (req, res) => {
    res.status(404).json({
        success: false,
        message: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
    });
});
// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
    console.error('Global error handler:', error);
    res.status(error.status || 500).json({
        success: false,
        message: process.env.NODE_ENV === 'production'
            ? '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
            : error.message
    });
});
// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
const startServer = async () => {
    try {
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const dbConnected = await (0, database_1.testConnection)();
        if (!dbConnected) {
            console.error('‚ùå Failed to connect to database. Exiting...');
            process.exit(1);
        }
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        app.listen(port, () => {
            console.log(`üöÄ Server is running on port ${port}`);
            console.log(`üìä Environment: ${process.env.NODE_ENV || 'development'}`);
            console.log(`üîó API Base URL: http://localhost:${port}/api`);
        });
    }
    catch (error) {
        console.error('‚ùå Failed to start server:', error);
        process.exit(1);
    }
};
// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGTERM', () => {
    console.log('SIGTERM received, shutting down gracefully');
    process.exit(0);
});
process.on('SIGINT', () => {
    console.log('SIGINT received, shutting down gracefully');
    process.exit(0);
});
// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
startServer();
